(function() {var implementors = {
"kernel_api":[["impl Freeze for <a class=\"enum\" href=\"kernel_api/memory/allocator/enum.ZeroAllocError.html\" title=\"enum kernel_api::memory::allocator::ZeroAllocError\">ZeroAllocError</a>",1,["kernel_api::memory::allocator::ZeroAllocError"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"kernel_api/memory/allocator/struct.Config.html\" title=\"struct kernel_api::memory::allocator::Config\">Config</a>&lt;'a&gt;",1,["kernel_api::memory::allocator::Config"]],["impl Freeze for <a class=\"struct\" href=\"kernel_api/memory/allocator/struct.AllocationMeta.html\" title=\"struct kernel_api::memory::allocator::AllocationMeta\">AllocationMeta</a>",1,["kernel_api::memory::allocator::AllocationMeta"]],["impl Freeze for <a class=\"enum\" href=\"kernel_api/memory/allocator/enum.AlignedAllocError.html\" title=\"enum kernel_api::memory::allocator::AlignedAllocError\">AlignedAllocError</a>",1,["kernel_api::memory::allocator::AlignedAllocError"]],["impl Freeze for <a class=\"struct\" href=\"kernel_api/memory/mapping/struct.Mapping.html\" title=\"struct kernel_api::memory::mapping::Mapping\">Mapping</a>",1,["kernel_api::memory::mapping::Mapping"]],["impl Freeze for <a class=\"struct\" href=\"kernel_api/memory/struct.AllocError.html\" title=\"struct kernel_api::memory::AllocError\">AllocError</a>",1,["kernel_api::memory::AllocError"]],["impl Freeze for <a class=\"struct\" href=\"kernel_api/memory/struct.Frame.html\" title=\"struct kernel_api::memory::Frame\">Frame</a>",1,["kernel_api::memory::Frame"]],["impl Freeze for <a class=\"struct\" href=\"kernel_api/memory/struct.Page.html\" title=\"struct kernel_api::memory::Page\">Page</a>",1,["kernel_api::memory::Page"]],["impl&lt;const ALIGN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"kernel_api/memory/struct.PhysicalAddress.html\" title=\"struct kernel_api::memory::PhysicalAddress\">PhysicalAddress</a>&lt;ALIGN&gt;",1,["kernel_api::memory::PhysicalAddress"]],["impl&lt;const ALIGN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"kernel_api/memory/struct.VirtualAddress.html\" title=\"struct kernel_api::memory::VirtualAddress\">VirtualAddress</a>&lt;ALIGN&gt;",1,["kernel_api::memory::VirtualAddress"]],["impl !Freeze for <a class=\"struct\" href=\"kernel_api/sync/struct.Once.html\" title=\"struct kernel_api::sync::Once\">Once</a>",1,["kernel_api::sync::once::Once"]],["impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"kernel_api/sync/struct.OnceLock.html\" title=\"struct kernel_api::sync::OnceLock\">OnceLock</a>&lt;T&gt;",1,["kernel_api::sync::once::OnceLock"]],["impl&lt;T, F = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.fn.html\">fn</a>() -&gt; T&gt; !Freeze for <a class=\"struct\" href=\"kernel_api/sync/struct.LazyLock.html\" title=\"struct kernel_api::sync::LazyLock\">LazyLock</a>&lt;T, F&gt;",1,["kernel_api::sync::once::LazyLock"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()