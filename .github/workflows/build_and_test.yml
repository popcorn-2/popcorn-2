name: Build and test

on:
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Check out'
        uses: actions/checkout@v4
      - name: 'Install multilib'
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib
      - name: 'Build'
        env:
          CC: clang
          CXX: C++
        run: |
          ./pop.py build --arch x86_64 -v ${{ github.ref == 'refs/heads/trunk' && '--release' || '' }}
      - name: 'Archive live ISO'
        if: success() && github.ref == 'refs/heads/trunk'
        uses: actions/upload-artifact@v3
        with:
          name: Live ISO
          path: |
            target/debug/popcorn2.iso
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: 'Check out'
        uses: actions/checkout@v4
      - name: 'Install multilib and qemu'
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib qemu-system-x86 ovmf
      - name: 'Run tests'
        env:
          CC: clang
          CXX: C++
        run: |
          cp /usr/share/OVMF/OVMF_CODE.fd ./OVMF_CODE.fd
          cp /usr/share/OVMF/OVMF_VARS.fd ./OVMF_VARS.fd
          ./pop.py test --arch x86_64 -v --coverage coverage.profraw --junit junit.xml
      - name: Test Summary
        if: always()
        uses: test-summary/action@v2
        with:
          paths: "junit.xml"
          show: "fail, skip"
          output: "tests.md"
      - name: 'Archive results'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test results
          path: |
            junit.xml
      - name: 'Add results to PR'
        if: always()
        uses: mshick/add-pr-comment@v2
        with:
          message-path: "tests.md"
      - name: 'Add results to workflow summary'
        if: always()
        run: |
          cat tests.md >> $GITHUB_STEP_SUMMARY
      - name: 'Archive coverage'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test coverage
          path: |
            coverage.profraw
